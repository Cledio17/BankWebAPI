<!DOCTYPE html>
<html>
<head>
    <title>Bank API Interface</title>
    <script>
        function getUserById() {
            var userId = prompt("Enter User ID:");
            if (userId !== null) {
                fetch(`/api/User/get/${userId}`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        var resultElement = document.getElementById('result');
                        resultElement.innerHTML = '';

                        var usernameElement = document.createElement('div');
                        usernameElement.textContent = 'Username: ' + data.userName;
                        resultElement.appendChild(usernameElement);

                        var passwordElement = document.createElement('div');
                        passwordElement.textContent = 'Password: ' + data.password;
                        resultElement.appendChild(passwordElement);

                        var emailElement = document.createElement('div');
                        emailElement.textContent = 'Email: ' + data.email;
                        resultElement.appendChild(emailElement);

                        var phoneNumberElement = document.createElement('div');
                        phoneNumberElement.textContent = 'Phone Number: ' + data.phoneNumber;
                        resultElement.appendChild(phoneNumberElement);

                        var addressElement = document.createElement('div');
                        addressElement.textContent = 'Address: ' + data.address;
                        resultElement.appendChild(addressElement);

                        if (data.pfp) {
                            var imgElement = document.createElement('img');
                            imgElement.src = data.pfp; 
                            imgElement.alt = 'Profile Picture';
                            imgElement.style.width = '100px';
                            var profilePictureElement = document.getElementById('profilePicture');
                            while (profilePictureElement.firstChild) {
                                profilePictureElement.removeChild(profilePictureElement.firstChild);
                            }
                            profilePictureElement.appendChild(imgElement);
                        }
                    })
                    .catch(error => {
                        document.getElementById('result').innerHTML = 'Error: User ID not found';
                    });
            }
        }

        function deleteUserByUsername() {
            var username = prompt("Enter Username:");
            if (username !== null) {
                fetch(`/api/User/deleteByName/${username}`, { method: 'GET' })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.text();
                    })
                    .then(message => {
                        document.getElementById('result').innerHTML = message;
                    })
                    .catch(error => {
                        document.getElementById('result').innerHTML = 'Error: Username not found';
                    });
            }
        }

        function deleteUserByEmail() {
            var email = prompt("Enter Email:");
            if (email !== null) {
                fetch(`/api/User/deleteByEmail/${email}`, { method: 'GET' })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.text();
                    })
                    .then(message => {
                        document.getElementById('result').innerHTML = message;
                    })
                    .catch(error => {
                        document.getElementById('result').innerHTML = 'Error: Email not found';
                    });
            }
        }

        function createUser() {
            var user = {
                UserName: prompt("Enter Username:"),
                Password: prompt("Enter Password:"),
                Email: prompt("Enter Email:"),
                PhoneNumber: prompt("Enter Phone Number:"),
                Address: prompt("Enter Address:"),
                pfp: prompt("Enter Pfp URL:")
            };

            fetch('/api/User', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(user)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(message => {
                    document.getElementById('result').innerHTML = message;
                })
                .catch(error => {
                    document.getElementById('result').innerHTML = 'Error: New user information not complete';
                });
        }

        function updateUser() {
            var username = prompt("Enter Username:");
            if (username !== null) {
                var password = prompt("Enter Password:");
                var email = prompt("Enter Email:");
                var phoneNumber = prompt("Enter Phone Number:");
                var address = prompt("Enter Address:");
                var pfp = prompt("Enter Pfp URL:");

                var user = {
                    UserName: username,
                    Password: password,
                    Email: email,
                    PhoneNumber: phoneNumber,
                    Address: address,
                    pfp: pfp
                };

                fetch(`/api/User/update/${username}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(user)
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.text();
                    })
                    .then(message => {
                        document.getElementById('result').innerHTML = message;
                    })
                    .catch(error => {
                        document.getElementById('result').innerHTML = 'Error: update user information failed';
                    });
            }
        }

        function getAccountById() {
            var accountId = prompt("Enter Account ID:");
            if (accountId !== null) {
                fetch(`/api/Account/get/${accountId}`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        var resultElement = document.getElementById('result');
                        resultElement.innerHTML = '';

                        var acctNoElement = document.createElement('div');
                        acctNoElement.textContent = 'Account Number: ' + data.acctNo;
                        resultElement.appendChild(acctNoElement);

                        var acctHolderElement = document.createElement('div');
                        acctHolderElement.textContent = 'Holder Name: ' + data.acctName;
                        resultElement.appendChild(acctHolderElement);

                        var acctBalElement = document.createElement('div');
                        acctBalElement.textContent = 'Balance: ' + data.acctBal;
                        resultElement.appendChild(acctBalElement);
                    })
                    .catch(error => {
                        document.getElementById('result').innerHTML = 'Error: Account ID not found';
                    });
            }
        }

        function deleteAccount() {
            var accountId = prompt("Enter Account ID:");
            if (accountId !== null) {
                fetch(`/api/Account/delete/${accountId}`, { method: 'GET' })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.text();
                    })
                    .then(message => {
                        document.getElementById('result').innerHTML = message;
                    })
                    .catch(error => {
                        document.getElementById('result').innerHTML = 'Error: Account ID not found';
                    });
            }
        }

        function createAccount() {
            var account = {
                acctNo: prompt("Enter Account Number:"),
                acctBal: prompt("Enter Balance:"),
                acctName: prompt("Enter Holder Name:"),
                transHist: ""
            };

            fetch('/api/Account', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(account)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(response.text());
                    }
                    return response.text();
                })
                .then(message => {
                    document.getElementById('result').innerHTML = message;
                })
                .catch(error => {
                    document.getElementById('result').innerHTML = 'Error: Account creation failed';
                });
        }

        function updateAccount() {
            var acctNum = prompt("Enter Account Number:");
            if (acctNum !== null) { 
                var acctBalance = prompt("Enter Balance:");
                var acctname  = prompt("Enter Holder Name:");

                var account = {
                    acctNo: acctNum,
                    acctBal: acctBalance,
                    acctName: acctname
                };
            };
            fetch(`/api/Account/update/${acctNum}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(account)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(message => {
                    document.getElementById('result').innerHTML = message;
                })
                .catch(error => {
                    document.getElementById('result').innerHTML = 'Error: Update account information failed';
                });
        }

        function deposit() {
            var transaction = {
                acctNo: prompt("Enter Account Number:"),
                operation: "1",
                amount: prompt("Enter Amount:")
            };

            fetch('/api/Transaction', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(transaction)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok. Some errors have occured.');
                    }
                    return response.text();
                })
                .then(message => {
                    document.getElementById('result').innerHTML = message;
                })
                .catch(error => {
                    document.getElementById('result').innerHTML = 'Error: Account number not found';
                });
        }

        function withdrawal() {
            var transaction = {
                acctNo: prompt("Enter Account Number:"),
                operation: "2",
                amount: prompt("Enter Amount:")
            };

            fetch('/api/Transaction', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(transaction)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok. Some errors have occured.');
                    }
                    return response.text();
                })
                .then(message => {
                    document.getElementById('result').innerHTML = message;
                })
                .catch(error => {
                    document.getElementById('result').innerHTML = 'Error: Account number not found';
                });
        }
    </script>
</head>
<body>
    <h1>Bank API Interface</h1>

    <h2>User Controller</h2>
    <button onclick="getUserById()">Get User by UserName</button>
    <button onclick="deleteUserByUsername()">Delete User by Username</button>
    <button onclick="deleteUserByEmail()">Delete User by Email</button>
    <button onclick="createUser()">Create User</button>
    <button onclick="updateUser()">Update User</button>

    <h2>Account Controller</h2>
    <button onclick="getAccountById()">Get Account by ID</button>
    <button onclick="deleteAccount()">Delete Account</button>
    <button onclick="createAccount()">Create Account</button>
    <button onclick="updateAccount()">Update Account</button>

    <h2>Transaction Controller</h2>
    <button onclick="deposit()">Deposit</button>
    <button onclick="withdrawal()">Withdrawal</button>
    

    <h4>Result:</h4>
    <div id="profilePicture"></div>
    <div id="result"> </div>
</body>
</html>
